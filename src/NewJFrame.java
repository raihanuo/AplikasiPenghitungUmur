/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.net.URL;
import java.time.LocalDate;
import java.time.Period;
import java.time.ZoneId;
import java.util.Date;
import javax.swing.JOptionPane;
import org.json.JSONArray;
import org.json.JSONObject;

/**
 *
 * @author USER
 */
public class NewJFrame extends javax.swing.JFrame {

    /**
     * Creates new form NewJFrame
     */
    public NewJFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        labelUmur = new javax.swing.JLabel();
        labelUltah = new javax.swing.JLabel();
        labelPeristiwa = new javax.swing.JLabel();
        buttonHitung = new javax.swing.JButton();
        dateChooser = new com.toedter.calendar.JDateChooser();
        jScrollPane1 = new javax.swing.JScrollPane();
        textAreaPeristiwa = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Aplikasi Penghitung Umur");

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("Pilih Tanggal Lahir");

        labelUmur.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        labelUmur.setText("Umur");

        labelUltah.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        labelUltah.setText("Ulang Tahun Berikutnya");

        labelPeristiwa.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        labelPeristiwa.setText("Peristiwa Penting");

        buttonHitung.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        buttonHitung.setText("Hitung");
        buttonHitung.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonHitungActionPerformed(evt);
            }
        });

        dateChooser.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                dateChooserPropertyChange(evt);
            }
        });

        textAreaPeristiwa.setEditable(false);
        textAreaPeristiwa.setColumns(20);
        textAreaPeristiwa.setRows(5);
        jScrollPane1.setViewportView(textAreaPeristiwa);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(buttonHitung, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 75, Short.MAX_VALUE)
                        .addComponent(dateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1)
                    .addComponent(labelUltah, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(labelUmur, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(labelPeristiwa, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1)
                    .addComponent(dateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(buttonHitung)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(labelUmur)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(labelUltah)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(labelPeristiwa)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(24, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // Mengubah angka bulan menjadi nama bulan dalam Bahasa Indonesia
    private String ubahBulan(String month) {
        switch (month) {
            case "1":    return "Januari";
            case "2":    return "Februari";
            case "3":    return "Maret";
            case "4":    return "April";
            case "5":    return "Mei";
            case "6":    return "Juni";
            case "7":    return "Juli";
            case "8":    return "Agustus";
            case "9":    return "September";
            case "10":    return "Oktober";
            case "11":    return "November";
            case "12":    return "Desember";
            default:       return ""; // Mengembalikan string kosong jika input tidak valid
        }
    }
    
    private void peristiwaPenting(String month, String date) {
        try {
            // Membuat URL untuk mendapatkan data peristiwa penting dari Wikipedia berdasarkan bulan dan tanggal
            String url = "https://en.wikipedia.org/api/rest_v1/feed/onthisday/all/" + month + "/" + date;

            // Membuka koneksi ke URL
            URL obj = new URL(url);
            HttpURLConnection con = (HttpURLConnection) obj.openConnection();
            con.setRequestMethod("GET"); // Mengatur metode permintaan ke GET
            con.setRequestProperty("User-Agent", "Mozilla/5.0"); // Menetapkan User-Agent

            int responseCode = con.getResponseCode(); // Mendapatkan kode respons dari permintaan
            if (responseCode == HttpURLConnection.HTTP_OK) { // Memeriksa apakah permintaan berhasil
                BufferedReader in = new BufferedReader(new InputStreamReader(con.getInputStream())); // Membaca respons
                String inputLine;
                StringBuffer response = new StringBuffer();

                // Mengumpulkan data dari respons
                while ((inputLine = in.readLine()) != null) {
                    response.append(inputLine);
                }
                in.close(); // Menutup BufferedReader

                // Mengonversi respons JSON ke objek JSONObject
                JSONObject jsonResponse = new JSONObject(response.toString());
                JSONArray eventsArray = jsonResponse.getJSONArray("events"); // Mendapatkan array peristiwa dari respons

                // Menampilkan judul di textArea
                textAreaPeristiwa.setText("Peristiwa penting pada " + date + " " + ubahBulan(month) + " di Wikipedia :\n");
                // Mengulangi semua peristiwa dan menampilkannya di textArea
                for (int i = 0; i < eventsArray.length(); i++) {
                    JSONObject event = eventsArray.getJSONObject(i); // Mendapatkan objek peristiwa
                    int year = event.getInt("year"); // Mendapatkan tahun peristiwa
                    String description = event.getString("text"); // Mendapatkan deskripsi peristiwa
                    textAreaPeristiwa.append(year + " : " + description + "\n"); // Menambahkan peristiwa ke textArea
                }
            } else {
                // Menangani jika permintaan tidak berhasil
                textAreaPeristiwa.setText("Gagal mendapatkan data dari Wikipedia.");
            }
        } catch (Exception e) {
            e.printStackTrace(); // Menampilkan stack trace jika terjadi kesalahan
            textAreaPeristiwa.setText("Terjadi kesalahan saat mengambil data."); // Menampilkan pesan kesalahan ke textArea
        }
    }

    private void buttonHitungActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonHitungActionPerformed
        // Memanggil metode untuk menghitung umur
        hitungUmur();
    }//GEN-LAST:event_buttonHitungActionPerformed

    private void dateChooserPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_dateChooserPropertyChange
        // Mengecek apakah properti yang berubah adalah "date"
        if ("date".equals(evt.getPropertyName())) {
            // Memanggil metode untuk menghitung umur ketika tanggal dipilih
            hitungUmur();
        }
    }//GEN-LAST:event_dateChooserPropertyChange

    private void hitungUmur() {
        // Mendapatkan tanggal yang dipilih dari date chooser
        Date tanggalTerpilih = dateChooser.getDate();
        // Mengecek apakah tanggal lahir telah dipilih
        if (tanggalTerpilih == null) {
            // Menampilkan pesan peringatan jika tanggal lahir belum dipilih
            JOptionPane.showMessageDialog(this, "Pilih tanggal lahir terlebih dahulu!");
        } else {
            // Mengonversi tanggal terpilih ke LocalDate
            LocalDate tanggalLahir = tanggalTerpilih.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
            LocalDate sekarang = LocalDate.now();

            // Menghitung selisih umur dalam tahun, bulan, dan hari
            Period umur = Period.between(tanggalLahir, sekarang);
            // Menampilkan umur ke label
            labelUmur.setText("Umur : " + umur.getYears() + " Tahun, " + umur.getMonths() + " Bulan, " + umur.getDays() + " Hari");

            // Menghitung ulang tahun berikutnya
            LocalDate ultah = tanggalLahir.withYear(sekarang.getYear());
            if (ultah.isBefore(sekarang) || ultah.isEqual(sekarang)) {
                ultah = ultah.plusYears(1); // Menambah tahun jika ulang tahun sudah lewat
            }
            // Menampilkan tanggal ulang tahun berikutnya ke label
            labelUltah.setText("Ulang Tahun Berikutnya : " + ultah.toString());

            // Mengonversi bulan dan tanggal ke string untuk diproses lebih lanjut
            String bulan = Integer.toString(tanggalLahir.getMonthValue()),
                   tanggal = Integer.toString(tanggalLahir.getDayOfMonth());
            // Memanggil metode untuk mengecek peristiwa penting pada tanggal dan bulan tersebut
            peristiwaPenting(bulan, tanggal);
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NewJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonHitung;
    private com.toedter.calendar.JDateChooser dateChooser;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel labelPeristiwa;
    private javax.swing.JLabel labelUltah;
    private javax.swing.JLabel labelUmur;
    private javax.swing.JTextArea textAreaPeristiwa;
    // End of variables declaration//GEN-END:variables
}
